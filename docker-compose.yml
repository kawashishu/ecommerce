version: '3'
 
services:
  django:
        build: .
        container_name: django
        command: >
          sh -c "python manage.py wait_for_db &&
                 python manage.py migrate &&
                 python manage.py loaddata fixtures/Category.json &&
                 python manage.py loaddata fixtures/Customer.json &&
                 python manage.py loaddata fixtures/Product.json &&
                 python manage.py runserver 0.0.0.0:8000"
        volumes:
            - .:/usr/src/app/
        expose:
            - 8000
        ports:
            - "8000:8000"
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=*
            - CELERY_BROKER=rediss://red-cdiecr4gqg4aiismv5qg:oRgwYmOdBkyGsbYAEXtGfbxgrPMSoXxF@oregon-redis.render.com:6379/0
            - CELERY_BACKEND=rediss://red-cdiecr4gqg4aiismv5qg:oRgwYmOdBkyGsbYAEXtGfbxgrPMSoXxF@oregon-redis.render.com:6379/0
        depends_on:
            - db
            - redis
 
  db:
    image: postgres
    environment:
      - POSTGRES_DB=ecommerce
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - "5432:5432"
    volumes: 
      - pgdata:/var/lib/postgresql/data
  redis:
    restart: always
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
volumes:
  pgdata:
  redis-data:

# docker compose expose ports, create EC2 and git clone repo, mapping ports, docker-compose up -d