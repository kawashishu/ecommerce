version: '3'

services:
  django:
    build: .
    image: public.ecr.aws/k8f7u6w7/ecommerce:celery
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py runserver 0.0.0.0:80" 
    volumes:
      - .:/usr/src/app/
    expose:
      - 80
    ports:
      - "80:80"
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=*
      - CELERY_BROKER=rediss://red-cdiecr4gqg4aiismv5qg:oRgwYmOdBkyGsbYAEXtGfbxgrPMSoXxF@oregon-redis.render.com:6379/0

      - CELERY_BACKEND=rediss://red-cdiecr4gqg4aiismv5qg:oRgwYmOdBkyGsbYAEXtGfbxgrPMSoXxF@oregon-redis.render.com:6379/0

    depends_on:
      - db
      - redis
  db:
    image: public.ecr.aws/k8f7u6w7/ecommerce:postgres
    environment:
      - POSTGRES_DB=postgres_1xli
      - POSTGRES_USER=postgres_1xli_user
      - POSTGRES_PASSWORD=BUvAykKGxOaucSjdiYM4fcJKaGs9zd3Z
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  celery:
    restart: always
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=*
      - CELERY_BROKER=redis-19334.c12.us-east-1-4.ec2.cloud.redislabs.com:19334/0
      - CELERY_BACKEND=redis-19334.c12.us-east-1-4.ec2.cloud.redislabs.com:19334/0
    build: .
    image: public.ecr.aws/k8f7u6w7/ecommerce:celery
    command: celery -A ecommerce worker -l info
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
      - django
  celery-beat:
    restart: always
    image: public.ecr.aws/k8f7u6w7/ecommerce:celery
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=*
      - CELERY_BROKER=redis-19334.c12.us-east-1-4.ec2.cloud.redislabs.com:19334/0
      - CELERY_BACKEND=redis-19334.c12.us-east-1-4.ec2.cloud.redislabs.com:19334/0
    build: .
    command: celery -A ecommerce beat -l info
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
      - django
  redis:
    image: public.ecr.aws/k8f7u6w7/ecommerce:redis
volumes:
  pgdata:

    # docker compose expose ports, create EC2 and git clone repo, mapping ports, docker-compose up -d
